{"ast":null,"code":"var _jsxFileName = \"/Users/mathaiputhiakunnel/landregistry/FrontEndHyperledger/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport fetchData from './utils/fetchData';\nimport './login.css';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { BrowserRouter, Switch, Route, Link, useParams, useHistory, useLocation } from \"react-router-dom\";\nimport Dashboard from './Dashboard.js';\nimport TransferOwnership from './TransferOwnership';\nimport { isArray } from 'util';\n\nfunction App() {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    render: () => React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" \", React.createElement(Route, {\n    exact: true,\n    path: \"/transferownership\",\n    render: () => React.createElement(TransferOwnership, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n}\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Email \"), \" \", React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \"), \" \", React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" Password \"), \" \", React.createElement(FormControl, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), \" \", React.createElement(Button, {\n    block: true,\n    bsSize: \"large\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Login \"), \" \"), \" \");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mathaiputhiakunnel/landregistry/FrontEndHyperledger/src/App.js"],"names":["React","useState","Component","fetchData","Button","FormGroup","FormControl","FormLabel","BrowserRouter","Switch","Route","Link","useParams","useHistory","useLocation","Dashboard","TransferOwnership","isArray","App","Login","props","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport fetchData from './utils/fetchData'\nimport './login.css'\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport Dashboard from './Dashboard.js';\nimport TransferOwnership from './TransferOwnership';\nimport { isArray } from 'util';\n\nfunction App() {\n\n\n\n    return ( <\n        BrowserRouter >\n        <\n        Switch >\n\n        <\n        Route exact = { true }\n        path = '/'\n        render = {\n            () => < Login / > }\n        />\n\n        <\n        Route exact = { true }\n        path = '/dashboard'\n        render = {\n            () => < Dashboard / > }\n        /> <\n        Route exact = { true }\n        path = '/transferownership'\n        render = {\n            () => < TransferOwnership / > }\n        />\n\n        <\n        /Switch>\n\n        <\n        /BrowserRouter>\n\n    );\n}\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n    }\n    return (\n\n        <\n        div className = \"Login\" >\n\n        <\n        form onSubmit = { handleSubmit } >\n        <\n        FormGroup controlId = \"email\"\n        bsSize = \"large\" >\n        <\n        FormLabel > Email < /FormLabel> <\n        FormControl autoFocus type = \"email\"\n        value = { email }\n        onChange = { e => setEmail(e.target.value) }\n        /> <\n        /FormGroup> <\n        FormGroup controlId = \"password\"\n        bsSize = \"large\" >\n        <\n        FormLabel > Password < /FormLabel> <\n        FormControl value = { password }\n        onChange = { e => setPassword(e.target.value) }\n        type = \"password\" /\n        >\n        <\n        /FormGroup> <\n        Button block bsSize = \"large\"\n        disabled = {!validateForm() }\n        type = \"submit\" >\n        Login <\n        /Button> <\n        /form> <\n        /div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}