{"ast":null,"code":"var _jsxFileName = \"/Users/mathaiputhiakunnel/landregistry/FrontEndHyperledger/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport fetchData from './utils/fetchData';\nimport './login.css';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { BrowserRouter, Switch, Route, Link, useParams, useHistory, useLocation } from \"react-router-dom\";\nimport Dashboard from './Dashboard.js';\nimport TransferOwnership from './TransferOwnership';\nimport { isArray } from 'util';\n\nfunction App() {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    render: () => React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/transferownership\",\n    render: () => React.createElement(TransferOwnership, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Email\"), React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Password\"), React.createElement(FormControl, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Button, {\n    block: true,\n    bsSize: \"large\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mathaiputhiakunnel/landregistry/FrontEndHyperledger/src/App.js"],"names":["React","useState","Component","fetchData","Button","FormGroup","FormControl","FormLabel","BrowserRouter","Switch","Route","Link","useParams","useHistory","useLocation","Dashboard","TransferOwnership","isArray","App","Login","props","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport fetchData from './utils/fetchData'\nimport './login.css'\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport Dashboard from './Dashboard.js';\nimport TransferOwnership from './TransferOwnership';\nimport { isArray } from 'util';\n\nfunction App() {\n\n  \n\n  return (\n    <BrowserRouter>\n    <Switch>\n\n    <Route exact={true} path='/' render={()=> <Login/>}/>\n\n    <Route exact={true} path='/dashboard' render={()=> <Dashboard/>}/>\n    <Route exact={true} path='/transferownership' render={()=> <TransferOwnership/>}/>\n\n    </Switch>\n      \n    </BrowserRouter>\n    \n  );\n}\n\nfunction Login(props){\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n  return(\n\n    <div className=\"Login\">\n      \n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}